plugins {
    id 'java';
    id 'io.qameta.allure' version '2.11.2'  // Плагин для Allure
}

repositories {
    mavenCentral()
}

dependencies {
    /**
     * <p>Serenity — это фреймворк для написания UI-тестов с подробной интеграцией отчетов.
     * Он облегчает создание и визуализацию результатов тестов, помогая разрабатывать
     * и поддерживать тестовые сценарии для приложений с использованием JUnit и других фреймворков.</p>
     *
     * @dependency Serenity для интеграции с JUnit
     * @see <a href="https://mvnrepository.com/artifact/net.serenity-bdd/serenity-core">net.serenity-bdd:serenity-core:4.2.0</a>
     */
    implementation 'net.serenity-bdd:serenity-core:4.2.0'

/**
 * <p>JUnit 5 — это библиотека для написания и выполнения модульных тестов в Java.
 * Она предоставляет мощные и гибкие API для создания тестов и их запуска.</p>
 *
 * @dependency JUnit 5 API для модульных тестов
 * @see <a href="https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api">org.junit.jupiter:junit-jupiter-api:5.11.0</a>
 */
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'

/**
 * <p>SLF4J (Simple Logging Facade for Java) — это интерфейс для логирования,
 * который поддерживает интеграцию с различными системами логирования, такими как Log4j и Logback.</p>
 *
 * @dependency SLF4J для логирования
 * @see <a href="https://mvnrepository.com/artifact/org.slf4j/slf4j-api">org.slf4j:slf4j-api:2.0.16</a>
 */
    implementation 'org.slf4j:slf4j-api:2.0.16'

/**
 * <p>AssertJ — это библиотека для написания утверждений в тестах, которая делает тесты
 * более читабельными и улучшает их удобство. Она предоставляет расширенные средства для создания утверждений.</p>
 *
 * @dependency AssertJ для улучшенных утверждений
 * @see <a href="https://mvnrepository.com/artifact/org.assertj/assertj-core">org.assertj:assertj-core:3.26.3</a>
 */
    testImplementation 'org.assertj:assertj-core:3.26.3'

/**
 * <p>Selenide — это фреймворк для автоматизации браузеров, который упрощает работу с Selenium.
 * Он предоставляет удобный API для написания UI-тестов и управления браузерами.</p>
 *
 * @dependency Selenide для автоматизации тестов с использованием Selenium
 * @see <a href="https://mvnrepository.com/artifact/com.codeborne/selenide">com.codeborne:selenide:7.4.3</a>
 */
    implementation 'com.codeborne:selenide:7.4.3'

/**
 * <p>Selenium — это библиотека для автоматизации действий в браузерах. Она используется
 * для создания тестов веб-интерфейсов и взаимодействия с элементами веб-страниц.</p>
 *
 * @dependency Selenium для автоматизации UI-тестов
 * @see <a href="https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java">org.seleniumhq.selenium:selenium-java:4.13.0</a>
 */
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.13.0'

/**
 * <p>JUnit Jupiter Engine — это движок для выполнения тестов, написанных с использованием JUnit 5.
 * Он обеспечивает интеграцию и запуск тестов в проектах с использованием JUnit.</p>
 *
 * @dependency JUnit Jupiter Engine для выполнения тестов
 * @see <a href="https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine">org.junit.jupiter:junit-jupiter-engine:5.11.0</a>
 */
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.0'

/**
 * <p>Logback — это одна из самых популярных реализаций SLF4J, которая используется
 * для ведения журналов и логирования событий в приложениях.</p>
 *
 * @dependency Logback для логирования
 * @see <a href="https://mvnrepository.com/artifact/ch.qos.logback/logback-classic">ch.qos.logback:logback-classic:1.4.11</a>
 */
    implementation 'ch.qos.logback:logback-classic:1.4.11'
}

test {
    useJUnitPlatform()
}

